# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: myapp
  AWS_ACCOUNT: '943725333913'
  AWS_REGION: eu-west-1
  EKS_ClusterName: myapp-eks-cluster

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        #role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/BaseconeIaC-Role
        #role-duration-seconds: 1200
        aws-region: eu-west-1
            
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: myapp
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --file ./ShoppingWeb/Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_ClusterName }} --region ${{ env.AWS_REGION }}
    #- name: Image digest
    #  run: echo ${{step.docker_build.outputs.digest}}

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['build-and-pish-docker-image']
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 943725333913.dkr.ecr.eu-west-1.amazonaws.com/myapp
          ref: 'main'
          token:  ${{ secrets.Git_TOKEN }}
        name: setup git config
      - run: /
          git config --global user.email 'Jagdev.Mishra@wolterskluwer.com'
          git config --global user.name 'JagdevMishraWK'
          echo ${{ github.sha }}
          sed -i "s#${{ github.actor }}.*#${{ github.actor }}/gitops01:${{ github.sha }}#g" deployment.yaml
          git add -A
          git commit -am "update image for - ${{ github.sha }}"
      - run: echo ${{ github }}
      - run: git push origin main


